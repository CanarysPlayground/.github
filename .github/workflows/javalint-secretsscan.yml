name: Java Linting and Secrets Scan

on:
  workflow_call:
   inputs:
    defaultbranch:
      default: 'develop'
      required: false
      type: string
jobs:
  linter:
    name: üîç Lint Code
    runs-on: ubuntu-latest
    steps:
    
    - uses: actions/checkout@v3

    - name: Get branch name (merge)
      if: github.event_name != 'pull_request'
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

    - name: Get branch name (pull request)
      if: github.event_name == 'pull_request'
      shell: bash
      run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

    - name: print the branch name
      run: echo ${{ env.BRANCH_NAME }}

    - name: Run Super linter
      id: linter
      uses: github/super-linter@v4.9.6
      env:
        VALIDATE_ALL_CODEBASE: false
        VALIDATE_JAVA: true
        VALIDATE_JAVASCRIPT_ES: true
        VALIDATE_JAVASCRIPT_STANDARD: true        
        DEFAULT_BRANCH: ${{ env.BRANCH_NAME }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        DISABLE_ERRORS: true
#        OUTPUT_DETAILS: detailed
#        OUTPUT_FORMAT: tap
  
  secrets-scan:
    name: üîê Secret Scan
    runs-on: ubuntu-latest
    needs: linter
    steps:

    - uses: actions/checkout@v3
      with:
       fetch-depth: 0

    - name: Setup Gitleaks
      run: |
        brew install gitleaks
    - name: Secret Scan
      run: |
        gitleaks detect -f csv -r output.csv
      continue-on-error: true      

    - name: Check file content
      id: report
      run: |
       if [ -s output.csv ]; then
         echo "::set-output name=secrets::1"
       else
         echo "::set-output name=secrets::0"
         echo "No Secrets or credentials are exposed"
       fi
    - name: Read CSV
      id: csv
      uses: juliangruber/read-file-action@v1
      with:
        path: ./output.csv

    - uses: petems/csv-to-md-table-action@master
      id: csv-table-output
      with:
        csvinput: ${{ steps.csv.outputs.content }}

    - name: Add PR comment
      if: (steps.report.outputs.secrets == 1 && github.event_name == 'pull_request')
      uses: mshick/add-pr-comment@v1
      with:
        message: |
          ${{steps.csv-table-output.outputs.markdown-table}}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
        allow-repeats: true

    - name: Add PR comment
      if: (steps.report.outputs.secrets == 0 && github.event_name == 'pull_request')
      uses: mshick/add-pr-comment@v1
      with:
        message: No secrets or credentials are exposed
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
        allow-repeats: true

    - name: Failing the Action
      if: steps.report.outputs.secrets == 1 
      run: |
       echo "One ore more credentials are exposed"
       exit
